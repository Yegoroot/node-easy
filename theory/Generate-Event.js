// Генерирование событий в Node.js
/**
 * Cоздать собственную систему событий с использованием модуля events. Этот модуль предлагает нам класс EventEmitter,
 * возможности которого можно задействовать для организации работы с событиями
 */
const EventEmitter = require('events').EventEmitter

/**
 * При работе с ним нам доступны, кроме прочих, методы on() и emit().
 * Метод emit используется для вызова событий.
 * Метод on используется для настройки коллбэков, обработчиков событий,
 * которые вызываются при вызове определённого события.
 */
eventEmitter = new EventEmitter()

eventEmitter.on('start', () => {
    console.log('started')
})

//Для того чтобы вызвать это событие, используется следующая конструкция:
eventEmitter.emit('start')

/** ПЕРЕДАТЬ ЭЛЕМЕНТЫ
 * ----------------------------------------
 */
eventEmitter.on('start', (start, end) => {
    console.log(`started from ${start} to ${end}`)
})
eventEmitter.emit('start', 1, 100)

/**
 * ------------------------------------------
 * Объекты класса EventEmitter имеют и некоторые другие полезные методы:
 */
once() // — позволяет зарегистрировать обработчик события, который можно вызвать лишь один раз.
removeListener() // — позволяет удалить переданный ему обработчик из массива обработчиков переданного ему события.
removeAllListeners() // — позволяет удалить все обработчики переданного ему события.
